esphome:
  name: pulsante-sede
  friendly_name: Pulsante Sede
  # on_boot: 
  #  - priority: 600
  #    then:
  #    - light.turn_on:
  #        id: rgb_light
  #        effect: "Arcobaleno"

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

logger:
  level: DEBUG

http_request:
  verify_ssl: false
  useragent: sede_status
  timeout: 30s

globals:
  - id: sede_state
    type: bool
    restore_value: true
    initial_value: 'false'
  - id: card_id
    type: std::string
    initial_value: ''
  - id: card_hash
    type: std::string
    initial_value: ''

api:
  encryption:
    key: !secret sede_encryption_key

ota:
  - platform: esphome
    password: !secret sede_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  on_connect:
    then:
      - http_request.get:
          url: !secret sede_status_url
          headers:
            X-API-KEY: !secret sede_api_key
          capture_response: true
          on_response:
            then:
              - if:
                  condition:
                    lambda: return response->status_code == 200;
                  then:
                    - if:
                        condition:
                          lambda: return body == "true";
                        then:
                          - light.turn_on:
                              id: rgb_light
                              red: 0%
                              green: 100%
                              blue: 0%
                              effect: none
                          - globals.set:
                              id: sede_state
                              value: 'true'
                        else:
                          - light.turn_on:
                              id: rgb_light
                              red: 100%
                              green: 0%
                              blue: 0%
                              effect: none
                          - globals.set:
                              id: sede_state
                              value: 'false'
                  else:
                    - light.turn_on:
                        id: rgb_light
                        effect: "Errore"
                    - globals.set:
                        id: sede_state
                        value: 'false'
          on_error:
            then:
              - light.turn_on:
                  id: rgb_light
                  effect: "Errore"
              - globals.set:
                  id: sede_state
                  value: 'false'

output:
  - platform: ledc
    pin: 1
    id: red_output
    inverted: true
  - platform: ledc
    pin: 2
    id: green_output
    inverted: true
  - platform: ledc
    pin: 3
    id: blue_output
    inverted: true

light:
  - platform: rgb
    name: "Stato Sede"
    id: rgb_light
    red: red_output
    green: green_output
    blue: blue_output
    effects:
      - pulse:
          name: "Elaborazione"
          transition_length: 0.5s
          update_interval: 0.5s
      - strobe:
          name: "Errore"
          colors:
            - state: true
              red: 100%
              green: 0%
              blue: 0%
              duration: 500ms
            - state: false
              red: 0%
              green: 0%
              blue: 0%
              duration: 500ms
      - strobe:
          name: "CartaRiconosciuta"
          colors:
            - state: true
              red: 100%
              green: 0%
              blue: 100%
              duration: 500ms
            - state: false
              red: 0%
              green: 0%
              blue: 0%
              duration: 500ms
      - strobe:
          name: "CartaNonRiconosciuta"
          colors:
            - state: true
              red: 100%
              green: 50%
              blue: 0%
              duration: 300ms
            - state: false
              red: 0%
              green: 0%
              blue: 0%
              duration: 300ms

binary_sensor:
  - platform: gpio
    pin:
      number: 4
      mode: INPUT_PULLUP
      inverted: true
    name: "Pulsante Sede"
    on_press:
      then:
        - light.turn_on:
            id: rgb_light
            effect: "Elaborazione"
            red: 0%
            green: 0%
            blue: 100%
        - http_request.post:
            url: !secret sede_toggle_url
            headers:
              X-API-KEY: !secret sede_api_key
              Content-Type: application/json
            json:
              cardId: !lambda 'return id(card_id);'
              hash: !lambda 'return id(card_hash);'
            capture_response: true
            on_response:
              then:
                - if:
                    condition:
                      lambda: return response->status_code == 200;
                    then:
                      - if:
                          condition:
                            lambda: return body == "true";
                          then:
                            - light.turn_on:
                                id: rgb_light
                                red: 0%
                                green: 100%
                                blue: 0%
                                effect: none
                            - globals.set:
                                id: sede_state
                                value: 'true'
                          else:
                            - light.turn_on:
                                id: rgb_light
                                red: 100%
                                green: 0%
                                blue: 0%
                                effect: none
                            - globals.set:
                                id: sede_state
                                value: 'false'
                    else:
                      - light.turn_on:
                          id: rgb_light
                          effect: "Errore"
                      - globals.set:
                          id: sede_state
                          value: 'false'
            on_error:
              then:
                - light.turn_on:
                    id: rgb_light
                    effect: "Errore"
                - globals.set:
                    id: sede_state
                    value: 'false'

i2c:
  sda: GPIO5
  scl: GPIO6
  scan: true
  id: nfcread

pn532_i2c:
  update_interval: 1s
  i2c_id: nfcread
  on_tag:
    then:
      - lambda: |-
          ESP_LOGI("PN532", "Tag: %s", x.c_str());
          std::string tag_id = x;
          id(card_id) = tag_id;
          
          // Reset card_hash before processing
          id(card_hash) = "";
          
          // Check if tag has NDEF data
          if (!tag.has_ndef_message()) {
            ESP_LOGI("PN532", "No NDEF data");
            return;
          }
          
          // Get the NDEF message
          auto message = tag.get_ndef_message();
          auto records = message->get_records();
                    
          // Process each record
          int count = 0;
          std::string tag_hash;
          for (auto &record : records) {
            count++;
            std::string type = record->get_type();
            std::string payload = record->get_payload();
                        
            if (type == "T") {
              id(card_hash) = payload;
              // Text record - skip language code bytes
              if (payload.length() > 0) {
                uint8_t lang_length = payload[0] & 0x3F;
                std::string text = payload.substr(1 + lang_length);
                tag_hash = text;
                break;
              }
            }
          }

      # Check if card was successfully recognized (has hash)
      - if:
          condition:
            lambda: 'return !id(card_hash).empty();'
          then:
            # Card recognized - show success effect
            - light.turn_on:
                id: rgb_light
                effect: "CartaRiconosciuta"
            
            - delay: 30sec
            
            - lambda: |-
                // Print sede state and card id and card hash
                ESP_LOGI("PN532", "Sede State: %s, Card ID: %s, Card Hash: %s", 
                         id(sede_state) ? "true" : "false", 
                         id(card_id).c_str(), 
                         id(card_hash).c_str());

            - globals.set:
                id: card_id
                value: !lambda 'return "";'
            - globals.set:
                id: card_hash
                value: !lambda 'return "";'
            
            # Set LED to match sede_state
            - if:
                condition:
                  lambda: 'return id(sede_state);'
                then:
                  - light.turn_on:
                      id: rgb_light
                      red: 0%
                      green: 100%
                      blue: 0%
                      effect: none
                else:
                  - light.turn_on:
                      id: rgb_light
                      red: 100%
                      green: 0%
                      blue: 0%
                      effect: none
          else:
            # Card not recognized - show error effect
            - lambda: |-
                ESP_LOGI("PN532", "Card not recognized - no valid hash found. Card ID: %s", 
                         id(card_id).c_str());
            
            - light.turn_on:
                id: rgb_light
                effect: "CartaNonRiconosciuta"

            - globals.set:
                id: card_id
                value: !lambda 'return "";'
            - globals.set:
                id: card_hash
                value: !lambda 'return "";'

            - delay: 5sec
                        
            # Return to previous state
            - if:
                condition:
                  lambda: 'return id(sede_state);'
                then:
                  - light.turn_on:
                      id: rgb_light
                      red: 0%
                      green: 100%
                      blue: 0%
                      effect: none
                else:
                  - light.turn_on:
                      id: rgb_light
                      red: 100%
                      green: 0%
                      blue: 0%
                      effect: none
